bar.xjk<-bar.x[c(j,k)]
Sjk<-S[c(j,k),c(j,k)]
lines(ellipse(x=Sjk,centre=bar.xjk,level=0.95),
col="blue",lwd=1.5)
lines(ellipse(x=Sjk,centre=bar.xjk,level=0.8),
col="blue",lwd=1.5)
lines(ellipse(x=Sjk,centre=bar.xjk,level=0.99),
col="blue",lwd=1.5)
bone[,k]/bone[,j]
index<-which(bone[,k]/bone[,j]>1.1)
index
bone[index,]
col.ind[index]<-"red"
col.matplot<-rep(gray(0.5),n)
col.matplot[index]<-"red"
matplot(t(bone),type="l",axes=F,xlab="age",ylab="length",
main="Ramus bone data",col=col.matplot,lty=1)
axis(2)
bone[,k]/bone[,j]
index<-which(bone[,k]/bone[,j]>1.1)
index
bone[index,]
col.ind[index]<-"red"
col.matplot<-rep(gray(0.5),n)
col.matplot[index]<-"red"
matplot(t(bone),type="l",axes=F,xlab="age",ylab="length",
main="Ramus bone data",col=col.matplot,lty=1)
axis(2)
axis(1,at=1:4,labels=c(8,8.5,9,9.5))
box()
lines(colMeans(bone),lwd=2,col="black")
summary(lm(age9.5~age8,data=bone))
summary(lm(age9.5~age8,data=bone,subset=-index))
plot(bone[,j], bone[,k],ylim=c(45,58),
xlab=names(bone)[j],
ylab=names(bone)[k],
pch=16,main="Ramus bone data",
col=col.ind,asp=1)
abline(lm(age9.5~age8,data=bone))
abline(lm(age9.5~age8,data=bone,subset=-index),col="red")
pairs(bone,pch=16,lower.panel = NULL,col=col.ind)
round(scale(bone)[,],2)
a<-0.95; qnorm(a)
which(abs(scale(bone))>qnorm(a),arr.ind = T)
a<-0.975; qnorm(a)
which(abs(scale(bone))>qnorm(a),arr.ind = T)
boxplot(bone)
d<-mahalanobis(bone,center=bar.x,cov=S)
qqplot(qchisq(ppoints(d),df=p),d,pch=16,main="Bone data",
col=col.ind[order(d)])
abline(0,1,col="red")
text(qchisq(ppoints(d),df=p)[rank(d)[index]],d[index],
labels = paste("obs",rownames(bone)[index]),pos=2, col="red")
plot(d,ylim=c(0,14), xlim=c(0,22), pch=16, col=col.ind,
main="Outliers in Ramus bone data", xlab="obs num",
ylab="squared distance")
a<-0.95
abline(h=qchisq(a,df=p), lty=2)
a<-0.95
abline(h=qchisq(a,df=p), lty=2)
a<-(n-0.5)/n; a
abline(h=qchisq(a,df=p), lty=2)
text(index,d[index],
labels = paste("obs",rownames(bone)[index]),pos=2, col="red")
#                                            # PCA
bone.pca<-prcomp(bone)
#                                            # PCA
bone.pca<-prcomp(bone)
bone.pca
summary(bone.pca)
plot(1:p,bone.pca$sdev^2,type="b")
# pdf("scree_bone.pdf",paper="special")
#                                            # screeplot
screeplot(bone.pca, type="lines", main="Screeplot for ramus bone data")
abline(v=2, col="blue", lty=2, lwd=2)
qqnorm(bone.pca$x[,1], pch=16)
qqline(bone.pca$x[,1], col="red")
qqnorm(bone.pca$x[,2], pch=16)
qqline(bone.pca$x[,2], col="red")
#                                            # plot of first two PCs
plot(PC2~PC1,data=bone.pca$x,pch=16,asp=1, xlim=c(-12,12),
main="Ramus bone data", xlab = "PC1", ylab = "PC2",col=col.ind)
lines(ellipse(x=diag(bone.pca$sdev[1:2]^2),
centre=c(0,0),level=0.95), col="blue",lwd=1.5)
lines(ellipse(x=diag(bone.pca$sdev[1:2]^2),
centre=c(0,0),level=(n-1/2)/n), col="gray50",lwd=1.5)
boxplot(bone.pca$x[,1],main="PC1")
boxplot(bone.pca$x[,2],main="PC2")
boxplot(bone.pca$x[,1],main="PC1")
boxplot(bone.pca$x[,2],main="PC2")
points(rep(1,length(index)),
bone.pca$x[index,2],pch=16,col=col.ind[index])
text(rep(1,length(index)),
bone.pca$x[index,2],
labels = paste("obs",rownames(bone)[index]),pos=4, col="red")
qqnorm(pendigits.pca$x[,1], pch=16)
setwd("~/Documents/PhD/MATERIE/MULTIVARIATE STATISTICAL ANALYSIS/problemSet1/MultivariateStatAnalysis")
pendigits<-read.table("data/pendigits.txt", sep=",",head=F)
names(pendigits)<-c(paste0(rep(c("x","y"),8),rep(1:8,each=2)),"digit")
head(pendigits)
dim(pendigits)
lookup<-c("darkgreen",  "brown", "lightblue",  "magenta", "purple",
"blue", "red", "lightgreen", "orange", "cyan")
names(lookup)<-as.character(0:9)
digit.col<-lookup[as.character(pendigits$digit)]
pendigits.pca<-prcomp(pendigits)
pendigits.pca
summary(pendigits.pca)
n<-dim(pendigits)[1];n
p<-dim(pendigits)[2];p
plot(1:p,pendigits.pca$sdev^2,type="b")
# screeplot
screeplot(pendigits.pca, type="lines", main="Screeplot for pendigits data")
abline(v=4, col="blue", lty=2, lwd=2)
qqnorm(pendigits.pca$x[,1], pch=16)
qqline(pendigits.pca$x[,1], col="red")
qqnorm(pendigits.pca$x[,2], pch=16)
qqline(pendigits.pca$x[,2], col="red")
qqnorm(pendigits.pca$x[,1], pch=16)
qqline(pendigits.pca$x[,1], col="red")
qqnorm(pendigits.pca$x[,2], pch=16)
qqline(pendigits.pca$x[,2], col="red")
qqnorm(pendigits.pca$x[,3], pch=16)
qqline(pendigits.pca$x[,3], col="red")
qqnorm(pendigits.pca$x[,1], pch=16)
qqline(pendigits.pca$x[,1], col="red")
qqnorm(pendigits.pca$x[,2], pch=16)
qqline(pendigits.pca$x[,2], col="red")
qqnorm(pendigits.pca$x[,1], pch=16)
qqline(pendigits.pca$x[,1], col="red") #heavy tailed
qqnorm(pendigits.pca$x[,2], pch=16)
qqline(pendigits.pca$x[,2], col="red")
qqnorm(pendigits.pca$x[,3], pch=16)
qqline(pendigits.pca$x[,3], col="red")
boxplot(pendigits.pca$x[,1],main="PC1")
boxplot(pendigits.pca$x[,2],main="PC2")
boxplot(pendigits.pca$x[,2],main="PC3")
boxplot(pendigits.pca$x[,3],main="PC3")
points(rep(1,length(index)),
bone.pca$x[index,2],pch=16,col=col.ind[index])
boxplot(pendigits.pca$x[,3],main="PC3")
pendigits
pendigits.pca.plot <- autoplot(pendigits.pca$x[,1:3],
data = pendigits,
colour = 'digits')
library(ggfortify)
pendigits.pca.plot <- autoplot(pendigits.pca$x[,1:3],
data = pendigits,
colour = 'digits')
# 3)
install.packages("ggfortify")
library(ggfortify)
pendigits.pca.plot <- autoplot(pendigits.pca$x[,1:3],
data = pendigits,
colour = 'digits')
pendigits.pca.plot
pendigits.pca.plot <- autoplot(pendigits.pca$x[,1:2],
data = pendigits,
colour = 'digits')
pendigits.pca.plot
pendigits.pca.plot <- autoplot(pendigits.pca$x[,1:3],
data = pendigits,
colour = 'digits')
# 3)
pairs(pendigits.pca$x[, 1:3],lower.panel=NULL,
col=col.ind,pch=16)
pendigits.pca<-prcomp(pendigits)
pendigits.pca
summary(pendigits.pca)
n<-dim(pendigits)[1];n
p<-dim(pendigits)[2];p
plot(1:p,pendigits.pca$sdev^2,type="b")
# screeplot
screeplot(pendigits.pca, type="lines", main="Screeplot for pendigits data")
abline(v=4, col="blue", lty=2, lwd=2)
qqnorm(pendigits.pca$x[,1], pch=16)
qqline(pendigits.pca$x[,1], col="red") #heavy tailed
qqnorm(pendigits.pca$x[,2], pch=16)
qqline(pendigits.pca$x[,2], col="red") #heavy tailed
qqnorm(pendigits.pca$x[,3], pch=16)
qqline(pendigits.pca$x[,3], col="red") #normal
# 3)
pairs(pendigits.pca$x[, 1:3],lower.panel=NULL,
col=col.ind,pch=16)
# 3)
pairs(pendigits.pca$x[, 1:3],lower.panel=NULL,
col="digits",pch=16)
# 3)
pairs(pendigits.pca$x[, 1:3],lower.panel=NULL,
col=digits,pch=16)
# 3)
pairs(pendigits.pca$x[, 1:3],lower.panel=NULL,
col=pendigits$digits,pch=16)
pendigits$digits
pendigits$digit
# 3)
d <- as.data.frame(pendigits.pca$x[,1:3])
d$Group1 <- pendigits$digit
mycols <- c("forestgreen", "gold", "dodgerblue", "green", "red", "orange", "yellow", "blue", "black")
pairs(pendigits.pca$x[, 1:3],lower.panel=NULL,
col=mycols,pch=16)
rm(list=ls())
usair <- read.table("data/usair.txt", header = TRUE)
# converto a dataframe
DF <- as.data.frame(usair)
head(DF)
# cancello la colonna da ignorare
DF$SO2 <- NULL
head(DF)
# "Neg.Temp" "Manuf"  "Pop"   "Wind"  "Precip"  "Days"
#names(DF) <- paste("x",1:6,sep="")
names(DF) <- c('x1','x2','x3','x4','x5','x6')
attach(DF)
# 1)
# Media di ciascuna colonna
x_bar <- colMeans(DF)
# matrice di correlazione e covarianza
Cors <- cor(DF)
varcov <- cov(DF)
x_bar
Cors
varcov
# matrice di correlazione e covarianza
Cors <- cor(DF)
varcov <- cov(DF)
x_bar
Cors
varcov
# commentare le correlazioni
'
COMMENTI
'
boxplot(x1)
which(x1 < -71)   #9 Miami
boxplot(x2)
boxplot(x1)
which(x1 < -71)   #9 Miami
DF
DF$9
DF[9]
Df.9
DF(9)
DF[9,]
DF[9,] #9 is Miami
boxplot(x2)
which(x2 > 1500)  #11 29  Chicago(+3000) e philadelphia
which(x2 > 1000)  #11 29  Chicago(+3000) e philadelphia
boxplot(x3)
which(x3 > 1600)  #come sopra
DF[11,]
DF[29,]#Chicago(+3000) e philadelphia
boxplot(x3)
which(x3 > 1600)  #come sopra
boxplot(x4) # ok
boxplot(x5)
which(x5 < 10)  #1 23 Phoenix Alburquerque
DF[23,] #Phoenix Alburquerque
boxplot(x6)
which(x6<60) #stessi due
DF_centr = sweep(DF,2,x_bar) # tolgo la media ad ogni riga
names(DF_centr) <- c('m1','m2','m3','m4','m5','m6')
attach(DF_centr)
varianze = diag(varcov) # estraggo le varianze delle colonne
for (i in 1:6){
DF_centr[,i] <- DF_centr[,i]/varianze[i]
} # calcolo le distanze per ogni osservazione per ogni colonna
# 3)
install.packages("moments")
library(moments)
qqnorm(x1,pch=16,main="Q-Q plot for x1")
qqline(x1,col="red") #quite normal
skewness(x1)
qqnorm(x2,pch=16,main="Q-Q plot for x2")
qqline(x2,col="red") #right skew distribution
skewness(x2)
plot(density(x2))
qqnorm(x3,pch=16,main="Q-Q plot for x3")
qqnorm(x1,pch=16,main="Q-Q plot for x1")
qqline(x1,col="red") #quite normal
skewness(x1)
qqnorm(x2,pch=16,main="Q-Q plot for x2")
qqline(x2,col="red") #right skew distribution
skewness(x2)
plot(density(x2))
qqnorm(x3,pch=16,main="Q-Q plot for x3")
qqline(x3,col="red") #right skew distribution
skewness(x3)
plot(density(x3))
plot(density(x1))
skewness(x1)
qqnorm(x4,pch=16,main="Q-Q plot for x4")
qqline(x4,col="red") #normal
skewness(x4)
plot(density(x4))
qqnorm(x5,pch=16,main="Q-Q plot for x5")
qqline(x5,col="red") #little left skewness
skewness(x5)
plot(density(x5))
qqnorm(x6,pch=16,main="Q-Q plot for x6")
qqline(x6,col="red") #normal
skewness(x6)
plot(density(x6))
# 4)
# plotto i scatterplot per ogni coppia di variabili piazzando sui grafici
# l'indice dell'istanza
n <- dim(DF)[1]
the.labels <- 1:n
pairs(DF, panel = function(x, y) text(x, y, labels = the.labels))
# 5-6)
## multivariate normality
n<-dim(DF)[1]
n
p<-dim(DF)[2]
p
X<-DF
# one<-rep(1,n)
# D<-as.matrix(X-one%*%t(bar.x))
D<-scale(DF,scale=F) # centro rispetto alla media (no dev.std.)
d<-rep(0,n)
for(i in 1:n) d[i]<-t(D[i,])%*%solve(varcov)%*%D[i,]
help("mahalanobis")
d
mahalanobis(X,center=colMeans(X),cov=var(X))
#                                     # the same
plot(density(d))
plot(qchisq(ppoints(d),df=p),sort(d),main="Chisq Q-Q plot of Mahalanobis distance",
xlab="Theoretical Quantiles",ylab="Sample Quantiles")
abline(0,1)
text(qchisq(ppoints(d),df=p),sort(d),label=order(d),
pos=4,cex=0.5,offset=0.3)
DF2 <- DF[-c(1,9,11),]
no_out <- mahalanobis(DF2,center=colMeans(DF2),cov=var(DF2))
plot(qchisq(ppoints(no_out),df=p),sort(no_out),main="Chisq Q-Q plot of Mahalanobis distance",
xlab="Theoretical Quantiles",ylab="Sample Quantiles")
abline(0,1)
# one<-rep(1,n)
# D<-as.matrix(X-one%*%t(bar.x))
D<-scale(DF,scale=F) # centro rispetto alla media (no dev.std.)
d<-rep(0,n)
for(i in 1:n) d[i]<-t(D[i,])%*%solve(varcov)%*%D[i,]
help("mahalanobis")
d
mahalanobis(X,center=colMeans(X),cov=var(X))
#                                     # the same
plot(density(d))
plot(qchisq(ppoints(d),df=p),sort(d),main="Chisq Q-Q plot of Mahalanobis distance",
xlab="Theoretical Quantiles",ylab="Sample Quantiles")
abline(0,1)
text(qchisq(ppoints(d),df=p),sort(d),label=order(d),
pos=4,cex=0.5,offset=0.3)
DF2 <- DF[-c(1,9,11),]
no_out <- mahalanobis(DF2,center=colMeans(DF2),cov=var(DF2))
# provo a simulare e vedere se i risultati combaciano
# definisco la distribuzione una volta con corr (rho) <0 e una
# con corr >0
A <- matrix(c(1,-0.1,0,  -0.1,1,-0.1,  0,-0.1,1), 3, 3)
B <- matrix(c(1,0.1,0,  0.1,1,0.1,  0,0.1,1), 3, 3)
# calcolo gli autovalori e vettori in entrambi i casi. gli autovettori
# sono giusti e i primi due (la seconda colonna e la prima) mi danno
# le prime 2 PC
pr1 <- eigen(A)
pr2 <- eigen(B)
# ora provo a simulare e ad usare il comando prcomp sui dati
# passo quindi sal population level al sample level
XA<- mvrnorm(n=10000, mu=c(1,-1,2), Sigma=A)
# provo a simulare e vedere se i risultati combaciano
# definisco la distribuzione una volta con corr (rho) <0 e una
# con corr >0
A <- matrix(c(1,-0.1,0,  -0.1,1,-0.1,  0,-0.1,1), 3, 3)
B <- matrix(c(1,0.1,0,  0.1,1,0.1,  0,0.1,1), 3, 3)
# calcolo gli autovalori e vettori in entrambi i casi. gli autovettori
# sono giusti e i primi due (la seconda colonna e la prima) mi danno
# le prime 2 PC
pr1 <- eigen(A)
pr2 <- eigen(B)
# ora provo a simulare e ad usare il comando prcomp sui dati
# passo quindi sal population level al sample level
XA<- mvrnorm(n=10000, mu=c(1,-1,2), Sigma=A)
XB<- mvrnorm(n=10000, mu=c(1,-1,2), Sigma=B)
pca.normA<- prcomp(XA)
library(MASS)
# ora provo a simulare e ad usare il comando prcomp sui dati
# passo quindi sal population level al sample level
XA<- mvrnorm(n=10000, mu=c(1,-1,2), Sigma=A)
XB<- mvrnorm(n=10000, mu=c(1,-1,2), Sigma=B)
pca.normA<- prcomp(XA)
pca.normB<- prcomp(XB)
rho <- -2/3
muz <- c(2,-3)
Sigz <- matrix(c(2-2*rho, 2*rho-1, 2*rho-1, 2-2*rho), ncol=2, ,byrow = T)
plot(muz[1], muz[2], xlab="Z1", ylab="Z2", main="Correlation = -2/3", pch=16,
xlim=c(-6,10), ylim=c(-11,5))
library(ellipse)
abline(0,0)
abline(v=0)
lines(ellipse(x=Sigz,centre=muz,level=0.95),col="red",lwd=1.5)
# codice per plottare il disegno anche se non chiesto
'
rho <- 2/3
Sigz2 <- matrix(c(2-2*rho, 2*rho-1, 2*rho-1, 2-2*rho), ncol=2, ,byrow = T)
plot(muz[1], muz[2], xlab="Z1", ylab="Z2", main="Correlation = -2/3", pch=16,
xlim=c(-6,10), ylim=c(-11,5))
abline(0,0)
abline(v=0)
lines(ellipse(x=Sigz2,centre=muz,level=0.95),col="red",lwd=1.5)
# 5)
'
pendig<-read.table("data/pendigits.txt", sep=",",head=F)
names(pendig)<-c(paste0(rep(c("x","y"),8),rep(1:8,each=2)),"digit")
head(pendig)
dim(pendig)
lookup<-c("darkgreen",  "brown", "lightblue",  "magenta", "purple",
"blue", "red", "lightgreen", "orange", "cyan")
names(lookup)<-as.character(0:9)
digit.col<-lookup[as.character(pendig$digit)]
'Bisogna togliere la colonna digits dal dataset altrimenti
la considera come variabile (con varianza da spiegare)
mentre è solo una label'
pendigits <- pendig
pendigits$digit <- NULL
n<-dim(pendigits)[1];n
p<-dim(pendigits)[2];p
pendigits.pca<-prcomp(pendigits)
pendigits.Npca<-prcomp(pendigits, scale=T)
pendigits.pca
summary(pendigits.pca)
pendigits.Npca$sdev^2
plot(1:p,pendigits.Npca$sdev^2,type="b")
abline(h=1)
# screeplot
screeplot(pendigits.pca, type="lines", main="Screeplot for pendigits data")
abline(v=4, col="blue", lty=2, lwd=2)
abline(v=5, col="blue", lty=2, lwd=2)
# 2) l'esercizio 2 richiede di utilizzare le prime 3 PCs.
# normalità univariata
qqnorm(pendigits.pca$x[,1], pch=16)
qqline(pendigits.pca$x[,1], col="red") #heavy tailed
qqnorm(pendigits.pca$x[,2], pch=16)
qqline(pendigits.pca$x[,2], col="red") #heavy tailed
qqnorm(pendigits.pca$x[,3], pch=16)
qqline(pendigits.pca$x[,3], col="red") #normal
# normalità multivariata
d <- as.data.frame(pendigits.pca$x[,1:3])
D<-scale(d,scale=F) # centro rispetto alla media (no dev.std.)
Mala <- mahalanobis(D,center=colMeans(D),cov=cov(D))
plot(density(Mala))
plot(qchisq(ppoints(Mala),df=3),sort(Mala),main="Chisq Q-Q plot of Mahalanobis distance",
xlab="Theoretical Quantiles",ylab="Sample Quantiles")
abline(0,1)
# 3)
outs <- which(Mala>5)
# mycols <- c("forestgreen", "gold", "dodgerblue", "green", "red", "orange", "yellow", "blue", "black")
pairs(d,lower.panel=NULL,col=lookup,pch=16)
'si riesce a fare lo scatterplot di un colore per volta?'
rm(list=ls())
usair <- read.table("data/usair.txt", header = TRUE)
# converto a dataframe
DF <- as.data.frame(usair)
head(DF)
# cancello la colonna da ignorare
DF$SO2 <- NULL
head(DF)
usair <- read.table("data/usair.txt", header = TRUE)
# converto a dataframe
DF <- as.data.frame(usair)
head(DF)
# cancello la colonna da ignorare
DF$SO2 <- NULL
head(DF)
# "Neg.Temp" "Manuf"  "Pop"   "Wind"  "Precip"  "Days"
#names(DF) <- paste("x",1:6,sep="")
names(DF) <- c('x1','x2','x3','x4','x5','x6')
attach(DF)
# 1)
# Media di ciascuna colonna
x_bar <- colMeans(DF)
x_bar
# 1)
# Media di ciascuna colonna
x_bar <- colMeans(DF)
# matrice di correlazione e covarianza
Cors <- cor(DF)
Cors
varcov <- cov(DF)
varcov
which(Cors>0.5)
which(Cors>0.5 || Cors < 1)
which(Cors>0.5 || Cors < 0.99)
which(Cors>0.5 & Cors < 0.99)
which(Cors>0.4 & Cors < 0.99)
which(Cors>0.4 & Cors < 0.5)
which(Cors<0.0)
which(Cors<-0.3)
which(Cors<0.0)
which(Cors<0.0)
which(Cors>0.4 & Cors < 0.99)
Cors
# 1)
# Media di ciascuna colonna
x_bar <- colMeans(DF)
# matrice di correlazione e covarianza
Cors <- cor(DF)
varcov <- cov(DF)
x_bar
Cors
varcov
Corsù
Corsù
Cors
which(Cors>0.4 & Cors < 0.99)
which(Cors<0.0)
which(Cors>0.4 & Cors < 0.5)
